% what
S, project                      = Integrated Marine Observing System - Ships of opportunity - Bio-Acoustics (IMOS SOOP-BA)
S, Conventions                  = CF-1.6,IMOS-1.4,SOOPBA-2.1
S, standard_name_vocabulary     = NetCDF Climate and Forecast (CF) Metadata Convention Standard Name Table 27
S, title                        = [mat ['A Bio-acoustic dataset from ' sample_data.transit_start_locality ' to ' sample_data.transit_end_locality ' in ' datestr(sample_data.time_coverage_start,'mmm yyyy')]]
S, institution                  = CSIRO Oceans and Atmosphere
D, date_created                 = [mat now_utc]
D, date_modified                = 
S, abstract                     = [mat ['This is a water column acoustic dataset from ' sample_data.transit_start_locality ' to ' sample_data.transit_end_locality ' in ' datestr(sample_data.time_coverage_start,'mmm yyyy') '. Collected under the IMOS BA-SOOP program by ' sample_data.ship_operator ' vessel ' sample_data.ship_name '.']]
S, comment                      = [ddb Comment]
S, source                       = Echosounder
S, instrument                   =  
S, keywords                     = Oceans > Ocean Acoustics > Acoustic Scattering, Oceans > Aquatic Sciences > Fisheries, ACOUSTIC SOUNDERS, ECHO SOUNDERS
S, keywords_vocabulary          = IMOS parameter names. See https://github.com/aodn/imos-toolbox/blob/master/IMOS/imosParameters.txt
S, references                   = http://www.imos.org.au
S, site_code                    = 
S, platform_code                = 
S, deployment_code              = [ddb Site]
S, featureType                  = [mat sample_data.meta.featureType]
S, cdm_data_type                = Trajectory
S, naming_authority             = IMOS
S, metadata                     = 
S, sensorML                     = 
S, instrument_serial_number     = [mat updateIfEmpty('[ddb InstrumentID Instruments SerialNumber]', sample_data.meta.instrument_serial_no)]
N, instrument_sample_interval   = [mat sample_data.meta.instrument_sample_interval]
N, instrument_average_interval  = [mat sample_data.meta.instrument_average_interval]
N, instrument_beam_angle        = [mat sample_data.meta.beam_angle]
N, instrument_burst_interval    = [mat sample_data.meta.instrument_burst_interval]
N, instrument_burst_duration    = [mat sample_data.meta.instrument_burst_duration]
S, institution_address          = Castray Esplanade, Hobart TAS 7000, Australia
S, institution_postal_address   = GPO Box 1538, Hobart TAS 7001, Australia
S, license                      = CC BY 4.0 https://creativecommons.org/licenses/by/4.0/

% these fields are automatically populated upon creation/export
S, file_version                 = 2
S, file_version_quality_control = 
S, history                      = 
S, quality_control_log          = 

% where
N, geospatial_lat_min       = [ddb Site Sites Latitude]
N, geospatial_lat_max       = [ddb Site Sites Latitude]
N, geospatial_lon_min       = [ddb Site Sites Longitude]
N, geospatial_lon_max       = [ddb Site Sites Longitude]
N, instrument_nominal_height= 
N, instrument_nominal_depth = 
N, site_nominal_depth       = 
N, site_depth_at_deployment = 

% if left empty, these fields are automatically populated upon import 
% when DEPTH variable exist (if not use depthPP pre-processing routine)
N, geospatial_vertical_min = 
N, geospatial_vertical_max = 
S, geospatial_vertical_positive = down

% when
N, local_time_zone         = 

% these fields are automatically populated upon import
D, time_deployment_start        = 
S, time_deployment_start_origin = 
D, time_deployment_end          = 
S, time_deployment_end_origin   = 
D, time_coverage_start          = 
D, time_coverage_end            = 

% who
S, data_centre                  = eMarine Information Infrastructure (eMII)
S, data_centre_email            = info@emii.org.au
S, author_email                 = Ryan.Downie@csiro.au
S, author                       = Ryan Downie
S, principal_investigator       = Rudy Kloser
S, principal_investigator_email = Rudy.Kloser@csiro.au
S, institution_references       = http://imos.org.au/basoop.html

% how
S, lineage                 = 
S, citation                = The citation in a list of references is: "IMOS [year-of-data-download], [Title], [data-access-URL], accessed [date-of-access].".
S, acknowledgement         = Any users of IMOS data are required to clearly acknowledge the source of the material derived from IMOS in the format: "Data was sourced from the Integrated Marine Observing System (IMOS) - IMOS is a national collaborative research infrastructure, supported by the Australian Government." If relevant, also credit other organisations involved in collection of this particular datastream (as listed in 'credit' in the metadata record).
S, disclaimer              = Data, products and services from IMOS are provided "as is" without any warranty as to fitness for a particular purpose.
S, distribution_statement       = Data may be re-used, provided that related metadata explaining the data has been reviewed by the user, and the data is appropriately acknowledged. Data, products and services from IMOS are provided "as is" without any warranty as to fitness for a particular purpose.
S, project_acknowledgement      = The collection of this data was funded by IMOS

% ICES WGFAST
S, creator                      = Ryan Downie
S, contributor                  = Ryan Downie
S, mission_name                 = Integrated Marine Observing System - Ships of Opportunity - Bio Acoustics
S, mission_abstract             = Collection of bio acoustic data from ships of opportunity
S, mission_start_date           = 2010-07-01
S, mission_end_date             =
S, mission_id                   = IMOS-SOOPBA
S, mission_platform             = Ship, other
S, cruise_name                  = (ICES-Mandatory if applicable)
S, cruise_description           = (ICES-Mandatory if applicable)
S, cruise_area_description      = (ICES-Mandatory if applicable)
S, cruise_summary_report        = (ICES-Mandatory if applicable)
D, cruise_start_date            =
D, cruise_end_date              =
S, cruise_id                    =
N, cruise_northlimit            =
N, cruise_southlimit            =
N, cruise_eastlimit             =
N, cruise_westlimit             =
S, cruise_units                 = signed decimal degrees
N, cruise_uplimit               =
N, cruise_downlimit             =
S, cruise_zunits                = m
S, cruise_projection            = Geographic
S, cruise_start_port            =
S, cruise_end_port              =
S, cruise_start_BODC_code       =
S, cruise_end_BODC_code         =
S, cruise_comments              =
S, transect_id		        =
S, transect_description         = [mat ['Transit from ' sample_data.transit_start_locality ' to ' sample_data.transit_end_locality]]
S, transect_related_activity	=
S, transect_start_time	        =
S, transect_end_time	        =
N, transect_northlimit          =
N, transect_southlimit          =
N, transect_eastlimit           =
N, transect_westlimit           =
S, transect_units               = signed decimal degrees
N, transect_uplimit             =
N, transect_downlimit           =
S, transect_zunits              = m
S, transect_projection          = Geographic
S, transect_comments            =
S, dataset_datum                = WGS84
S, dataset_linestring           =
S, dataset_ping_axis_units      = Distance
S, dataset_ping_axis_size       = 1 km
N, dataset_range_axis_size      = 10
S, projection                   = Geographic
S, units                        = signed decimal degrees
S, zunits                       = m

% Ship metadata read from platform/<ship>_attributes.txt, type determined here
S, ship_name                    =
S, ship_type                    =
S, ship_code                    =
S, ship_callsign                =
S, ship_alt_callsign            =
S, ship_imo                     =
S, ship_operator                =
S, ship_home_port               =
N, ship_length                  =
N, ship_breadth                 =
N, ship_tonnage                 =
N, ship_engine_power            =
S, ship_noise_design            =
S, ship_acknowledgement         =
S, ship_comments                =

% Channel metadata read from platform/<ship>_<channel>.txt, type determined here
N, frequency			=
S, instrument_channel_id        =
N, instrument_frequency         = 
S, instrument_transducer_location =
S, instrument_transducer_manufacturer =
S, instrument_transducer_model  =
S, instrument_transducer_beam_type =
S, instrument_transducer_serial =
N, instrument_transducer_depth  =
S, instrument_transducer_orientation =
N, instrument_transducer_psi    =
N, instrument_transducer_beam_angle_major =
N, instrument_transducer_beam_angle_minor =
S, instrument_transceiver_manufacturer =
S, instrument_transceiver_model =
S, instrument_transceiver_serial =
S, instrument_transceiver_firmware =
S, instrument_comments          =
S, calibration_date             =
S, calibration_acquisition_method =
S, calibration_processing_method =
S, calibration_accuracy_estimate =
S, calibration_report           =
S, calibration_comments		=
D, calibration_file_date	=
S, calibration_file_name	=
S, data_acquisition_software_name =
S, data_acquisition_software_version =
S, data_acquisition_stored_data_format =
S, data_acquisition_ping_duty_cycle =
S, data_acquisition_comments    =
S, data_processing_software_name = 
S, data_processing_software_version =
N, data_processing_frequency    =
N, data_processing_transceiver_power =
N, data_processing_transmit_pulse_length	=
N, data_processing_transceiver_gain =
S, data_processing_transceiver_gain_units =
N, data_processing_sa_correction =
N, data_processing_absorption	=
S, data_processing_absorption_description =
N, data_processing_soundspeed	=
S, data_processing_soundspeed_description =
N, data_processing_transducer_psi =
S, data_processing_motion_correction = 
S, data_processing_motion_correction_description =

%SOOP_BA
S, transit_start_locality	=
S, transit_end_locality	 	=
